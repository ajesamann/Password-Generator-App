{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\React Shit\\\\Password Generator App\\\\src\\\\components\\\\RandomPasswordGenerator.js\";\nimport React, { Component } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { Transition, animated } from \"react-spring/renderprops\";\n\nclass RandomPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      randomList: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"],\n      randomPassword: \"\",\n      showCopied: false,\n      addSpec: false,\n      value: 8\n    };\n\n    this.generateNewPassword = () => {\n      var specialCharArr = [\"!\", \"#\", \"$\", \"&\", \"?\", \"%\", \"^\", \"@\", \":\", \"/\", \">\", \"-\", \"_\", \"*\"];\n      var newArray = [];\n      var randSpecValue = specialCharArr[Math.floor(Math.random() * specialCharArr.length)];\n\n      for (var i = 0; i < this.state.value; i++) {\n        var randArrayValue = this.state.randomList[Math.floor(Math.random() * this.state.randomList.length)];\n\n        if (i < this.state.value) {\n          newArray.push(randArrayValue);\n        }\n      }\n\n      if (this.state.addSpec) {\n        var randLetter = newArray[Math.floor(Math.random() * newArray.length)];\n\n        if (newArray.indexOf(randLetter) > -1) {\n          newArray[newArray.indexOf(randLetter)] = randSpecValue;\n        }\n      }\n\n      this.setState({\n        randomPassword: newArray.join(\"\")\n      });\n    };\n\n    this.toggle = e => {\n      this.setState({\n        showCopied: !this.state.showCopied\n      });\n      setTimeout(() => {\n        this.setState({\n          showCopied: !this.state.showCopied\n        });\n      }, 3000);\n    };\n\n    this.toggleOn = e => {\n      this.setState({\n        addSpec: !this.state.addSpec\n      });\n    };\n\n    this.slideInput = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.addSpec);\n    const randomPassword = this.state.randomPassword;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Transition, {\n      native: true,\n      items: this.state.showCopied,\n      from: {\n        transform: \"translate3d(0, -200px, 0)\"\n      },\n      enter: {\n        transform: \"translate3d(0, -50px, 0)\"\n      },\n      leave: {\n        transform: \"translate3d(0, -200px, 0)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, show => show && (props => React.createElement(animated.div, {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"copied\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Successfully copied to clipboard\")))), React.createElement(\"div\", {\n      className: \"slidercon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"range\",\n      min: 3,\n      max: 13,\n      value: this.state.value,\n      className: \"slider\",\n      onChange: this.slideInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inputvalue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Password length: \", this.state.value)), React.createElement(\"label\", {\n      className: \"specialcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"special\",\n      value: \"special\",\n      onClick: this.toggleOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Include a special character\")), React.createElement(CopyToClipboard, {\n      text: randomPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"password\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, randomPassword)), React.createElement(\"div\", {\n      className: \"clickhere\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Click your password to copy it!\"), React.createElement(\"button\", {\n      className: \"generate-password\",\n      onClick: this.generateNewPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Generate Password!\"));\n  }\n\n}\n\nexport default RandomPassword;","map":{"version":3,"sources":["C:/Users/PC/Desktop/React Shit/Password Generator App/src/components/RandomPasswordGenerator.js"],"names":["React","Component","CopyToClipboard","Transition","animated","RandomPassword","state","randomList","randomPassword","showCopied","addSpec","value","generateNewPassword","specialCharArr","newArray","randSpecValue","Math","floor","random","length","i","randArrayValue","push","randLetter","indexOf","setState","join","toggle","e","setTimeout","toggleOn","slideInput","target","render","console","log","transform","show","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Transition, animated } from \"react-spring/renderprops\";\r\n\r\nclass RandomPassword extends Component {\r\n  state = {\r\n    randomList: [\r\n      \"A\",\r\n      \"B\",\r\n      \"C\",\r\n      \"D\",\r\n      \"E\",\r\n      \"F\",\r\n      \"G\",\r\n      \"H\",\r\n      \"I\",\r\n      \"J\",\r\n      \"K\",\r\n      \"L\",\r\n      \"M\",\r\n      \"N\",\r\n      \"O\",\r\n      \"P\",\r\n      \"Q\",\r\n      \"R\",\r\n      \"S\",\r\n      \"T\",\r\n      \"U\",\r\n      \"V\",\r\n      \"W\",\r\n      \"X\",\r\n      \"Y\",\r\n      \"Z\",\r\n      \"a\",\r\n      \"b\",\r\n      \"c\",\r\n      \"d\",\r\n      \"e\",\r\n      \"f\",\r\n      \"g\",\r\n      \"h\",\r\n      \"i\",\r\n      \"j\",\r\n      \"k\",\r\n      \"l\",\r\n      \"m\",\r\n      \"n\",\r\n      \"o\",\r\n      \"p\",\r\n      \"q\",\r\n      \"r\",\r\n      \"s\",\r\n      \"t\",\r\n      \"u\",\r\n      \"v\",\r\n      \"w\",\r\n      \"x\",\r\n      \"y\",\r\n      \"z\",\r\n      \"0\",\r\n      \"1\",\r\n      \"2\",\r\n      \"3\",\r\n      \"4\",\r\n      \"5\",\r\n      \"6\",\r\n      \"7\",\r\n      \"8\",\r\n      \"9\"\r\n    ],\r\n    randomPassword: \"\",\r\n    showCopied: false,\r\n    addSpec: false,\r\n    value: 8\r\n  };\r\n\r\n  generateNewPassword = () => {\r\n    var specialCharArr = [\r\n      \"!\",\r\n      \"#\",\r\n      \"$\",\r\n      \"&\",\r\n      \"?\",\r\n      \"%\",\r\n      \"^\",\r\n      \"@\",\r\n      \":\",\r\n      \"/\",\r\n      \">\",\r\n      \"-\",\r\n      \"_\",\r\n      \"*\"\r\n    ];\r\n    var newArray = [];\r\n    var randSpecValue =\r\n      specialCharArr[Math.floor(Math.random() * specialCharArr.length)];\r\n    for (var i = 0; i < this.state.value; i++) {\r\n      var randArrayValue = this.state.randomList[\r\n        Math.floor(Math.random() * this.state.randomList.length)\r\n      ];\r\n      if (i < this.state.value) {\r\n        newArray.push(randArrayValue);\r\n      }\r\n    }\r\n    if (this.state.addSpec) {\r\n      var randLetter = newArray[Math.floor(Math.random() * newArray.length)];\r\n      if (newArray.indexOf(randLetter) > -1) {\r\n        newArray[newArray.indexOf(randLetter)] = randSpecValue;\r\n      }\r\n    }\r\n    this.setState({ randomPassword: newArray.join(\"\") });\r\n  };\r\n\r\n  toggle = e => {\r\n    this.setState({ showCopied: !this.state.showCopied });\r\n    setTimeout(() => {\r\n      this.setState({ showCopied: !this.state.showCopied });\r\n    }, 3000);\r\n  };\r\n\r\n  toggleOn = e => {\r\n    this.setState({ addSpec: !this.state.addSpec });\r\n  };\r\n\r\n  slideInput = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.addSpec);\r\n    const { randomPassword } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Transition\r\n          native\r\n          items={this.state.showCopied}\r\n          from={{ transform: \"translate3d(0, -200px, 0)\" }}\r\n          enter={{ transform: \"translate3d(0, -50px, 0)\" }}\r\n          leave={{ transform: \"translate3d(0, -200px, 0)\" }}\r\n        >\r\n          {show =>\r\n            show &&\r\n            (props => (\r\n              <animated.div style={props}>\r\n                <div className=\"copied\">Successfully copied to clipboard</div>\r\n              </animated.div>\r\n            ))\r\n          }\r\n        </Transition>\r\n        <div className=\"slidercon\">\r\n          <input\r\n            type=\"range\"\r\n            min={3}\r\n            max={13}\r\n            value={this.state.value}\r\n            className=\"slider\"\r\n            onChange={this.slideInput}\r\n          ></input>\r\n          <div className=\"inputvalue\">Password length: {this.state.value}</div>\r\n        </div>\r\n        <label className=\"specialcon\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"special\"\r\n            value=\"special\"\r\n            onClick={this.toggleOn}\r\n          ></input>\r\n          <span className=\"checkbox\"></span>\r\n          <span>Include a special character</span>\r\n        </label>\r\n        <CopyToClipboard text={randomPassword}>\r\n          <div className=\"password\" onClick={this.toggle}>\r\n            {randomPassword}\r\n          </div>\r\n        </CopyToClipboard>\r\n        <div className=\"clickhere\">Click your password to copy it!</div>\r\n        <button\r\n          className=\"generate-password\"\r\n          onClick={this.generateNewPassword}\r\n        >\r\n          Generate Password!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomPassword;\r\n"]},"metadata":{},"sourceType":"module"}